// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview AI-powered daily tips to increase profits for coffee shop owners.
 *
 * - getSmartAssistantTip - A function that generates a smart assistant tip.
 * - SmartAssistantTipInput - The input type for the getSmartAssistantTip function.
 * - SmartAssistantTipOutput - The return type for the getSmartAssistantTip function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const SmartAssistantTipInputSchema = z.object({
  dailySalesData: z
    .string()
    .describe('A summary of the coffee shop daily sales data.'),
  currentInventoryLevels: z
    .string()
    .describe('A summary of the current inventory levels.'),
  customerTraffic: z
    .string()
    .describe('A description of customer traffic patterns throughout the day.'),
});
export type SmartAssistantTipInput = z.infer<typeof SmartAssistantTipInputSchema>;

const SmartAssistantTipOutputSchema = z.object({
  tip: z.string().describe('A tip to increase profits.'),
});
export type SmartAssistantTipOutput = z.infer<typeof SmartAssistantTipOutputSchema>;

export async function getSmartAssistantTip(input: SmartAssistantTipInput): Promise<SmartAssistantTipOutput> {
  return smartAssistantTipFlow(input);
}

const prompt = ai.definePrompt({
  name: 'smartAssistantTipPrompt',
  input: {schema: SmartAssistantTipInputSchema},
  output: {schema: SmartAssistantTipOutputSchema},
  prompt: `You are a smart assistant providing tips to coffee shop owners to increase profits.

  Based on the daily sales data, current inventory levels, and customer traffic patterns, provide a tip to increase profits.

  Daily Sales Data: {{{dailySalesData}}}
Current Inventory Levels: {{{currentInventoryLevels}}}
Customer Traffic: {{{customerTraffic}}}

  Tip:`,
});

const smartAssistantTipFlow = ai.defineFlow(
  {
    name: 'smartAssistantTipFlow',
    inputSchema: SmartAssistantTipInputSchema,
    outputSchema: SmartAssistantTipOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
